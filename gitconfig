[alias]
  a = add
  b = branch
  c = commit
  co = checkout
  # clone a repository including all submodules
  cr = clone --recursive
  # show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
  f = fetch
  fr = pull --rebase
  # switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
  # view abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  m = merge
  p = pull
  patch = !git --no-pager diff --no-color
  rb = rebase
  # view the current working tree status using the short format
  s = status -sb

[apply]
  whitespace = fix

[checkout]
  guess = true

[color]
  ui = auto
[color "diff"]
  meta = yellow bold
  commit = green bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[core]
  attributesfile = ~/.gitattributes
  excludesfile = ~/.gitignore

  # handle windows line endings
  # https://help.github.com/articles/dealing-with-line-endings/
  autocrlf = input
  safecrlf = warn

  # treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = trailing-space,space-before-tab

  # make `git rebase` safer on macos
  # http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
  trustctime = false

  # prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false

[fetch]
  # remove remote branches that no longer exist
  prune = true

[gpg]
  program = gpg2

[help]
  autocorrect = 1

[i18n]
  commitencoding = utf8

[init]
  defaultBranch = main

[log]
  date = local

[merge]
  # include summaries of merged commits in newly created merge commit messages
  log = true
  # show a diffstat at the end of the merge
  stat = true

[pager]
  # https://github.com/so-fancy/diff-so-fancy
  diff = diff-so-fancy | less --tabs=4 -RFX
  log  = diff-so-fancy | less --tabs=4 -RFX
  show = diff-so-fancy | less --tabs=4 -RFX

[pull]
  # rebase instead of merging when using `git pull`
  rebase = true

[push]
  autoSetupRemote = true
  default = current

[rebase]
  autostash = true
  stat = true

[status]
  showUntrackedFiles = all

[submodule]
  fetchJobs = 8

# URL shorthands
[url "git@github.com:"]
  insteadOf = "gh:"
  insteadOf = "git://github.com"
  insteadOf = "https://github.com/"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
  pushInsteadOf = "https://github.com/"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
  pushInsteadOf = "https://gist.github.com/"

[diff "exif"]
  textconv = exif

[github]
  user = cafedomingo

# use separate file for user info, etc.
[include]
  path = ~/.gitconfig.local
