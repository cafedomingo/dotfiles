[alias]
  # show verbose output about tags, branches, or remotes
  tags = tag -l
  branches = branch --all
  remotes = remote --verbose
  # list aliases
  aliases = config --get-regexp alias
  a = add
  b = branch
  c = commit
  co = checkout
  # clone a repository including all submodules
  cr = clone --recursive
  d = diff
  # show the diff between the latest commit and the current state
  dd = diff HEAD --patch-with-stat
  f = fetch
  fr = pull --rebase
  # switch to a branch, creating it if necessary
  go = "!f() { git switch -c \"$1\" 2> /dev/null || git switch \"$1\"; }; f"
  # view abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  # show detailed log with files changed
  ll = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]' --decorate --numstat
  m = merge
  p = pull
  patch = !git --no-pager diff --no-color
  rb = rebase
  # view the current working tree status using the short format
  s = status -sb
  # undo last commit but keep changes
  undo = reset HEAD~1 --mixed

[apply]
  whitespace = fix

[checkout]
  guess = true

[color]
  ui = auto
[color "diff"]
  meta = yellow bold
  commit = green bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[core]
  attributesfile = ~/.gitattributes
  excludesfile = ~/.gitignore
  # handle windows line endings
  # https://help.github.com/articles/dealing-with-line-endings/
  autocrlf = input
  safecrlf = warn
  # https://github.com/dandavison/delta
  pager = "if command -v delta >/dev/null 2>&1; then delta; else less; fi"
  # prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false
  # make `git rebase` safer on macos
  # http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/
  trustctime = false
  # speed up commands involving untracked files
  untrackedCache = true
  # treat spaces before tabs at start of lineand all kinds of trailing whitespace as an error
  whitespace = trailing-space,space-before-tab

[delta]
  # Better diff presentation
  plus-style = "syntax #012800"
  minus-style = "syntax #340001"
  syntax-theme = Monokai Extended
  navigate = true
  line-numbers = true
  side-by-side = true

[diff]
  # use better diff algorithm
  algorithm = histogram
  # detect copies as well as renames
  renames = copies
  # enable better word diff
  wordRegex = [A-Za-z0-9_]+|[^[:space:]]
  colorMoved = default

[fetch]
  # remove remote branches and tags that no longer exist
  prune = true
  pruneTags = true

[gpg]
  program = gpg2

[help]
  autocorrect = 1

[interactive]
  diffFilter = delta --color-only

[i18n]
  commitencoding = utf8

[init]
  defaultBranch = main

[log]
  date = local

[merge]
  # include summaries of merged commits in newly created merge commit messages
  log = true
  # show a diffstat at the end of the merge
  stat = true
  # always show common ancestor in merge conflicts
  conflictstyle = diff3

[pull]
  # rebase instead of merging when using `git pull`
  rebase = true

[push]
  autoSetupRemote = true
  default = current

[rebase]
  autostash = true
  stat = true

[status]
  showUntrackedFiles = all

[submodule]
  fetchJobs = 8

# URL shorthands
[url "git@github.com:"]
  insteadOf = "gh:"
  insteadOf = "git://github.com"
  insteadOf = "https://github.com/"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
  pushInsteadOf = "https://github.com/"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
  pushInsteadOf = "https://gist.github.com/"

[diff "exif"]
  textconv = exif

[github]
  user = cafedomingo

[include]
  # use separate file for user info, etc.
  path = ~/.gitconfig.local
